substitutions:
  _SERVICE_NAME: hardhat-mainnet-fork
timeout: 2h
steps:

# init environment
- name: 'gcr.io/cloud-builders/gcloud'
  id: init-env
  waitFor: ['-']
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      echo > .cloudbuild.env.sh
      echo "export NAMESPACE=dev" >> .cloudbuild.env.sh
      echo 'export CLUSTER_NAME=dev' >> .cloudbuild.env.sh
      echo 'export DEPLOY_TIMEOUT=10m' >> .cloudbuild.env.sh



# build docker image
- name: 'gcr.io/kaniko-project/executor'
  id: build-docker
  waitFor: ['init-env']
  args:
    - --build-arg CONFIG=hardhat-mainnet.config.js
    - --destination=gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA
    - --destination=gcr.io/$PROJECT_ID/$_SERVICE_NAME:latest
    - --cache=true

# build docker image
- name: 'gcr.io/kaniko-project/executor'
  id: build-docker-compose
  waitFor: ['init-env']
  args:
    - --build-arg CONFIG=hardhat-empty.config.js
    - --destination=gcr.io/$PROJECT_ID/hardhat-network:latest
    - --cache=true

# deploy
- name: 'gcr.io/cloud-builders/gke-deploy'
  id: deploy
  waitFor:
    - build-docker
    - build-docker-compose
  entrypoint: 'sh'
  args:
      - '-c'
      - |
        . ./.cloudbuild.env.sh
        if [ "$$CLUSTER_NAME" = "" ]; then
          echo "Not deploying on branch $BRANCH_NAME"
          exit;
        fi

        gcloud --quiet container clusters get-credentials --region us-central1-c $$CLUSTER_NAME

        kubectl -n $$NAMESPACE get deployment/$_SERVICE_NAME -o yaml | gke-deploy run --timeout $$DEPLOY_TIMEOUT -f - -i gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA -a $_SERVICE_NAME

        if [[ $? != 0 ]]; then
           kubectl -n $$NAMESPACE rollout undo deployments/$_SERVICE_NAME

           exit 1
        fi
